// C++ implementation to find the sum of
// nodes of the Linked List
#include <bits/stdc++.h>
using namespace std;

/* A Linked list node */
struct list {
int data;
struct list* next;
};

// function to insert a node at the
// beginning of the linked list
void push(struct list** head_ref, int new_data)
{
/* allocate node /
struct list new_list = new list;

/* put in the data */
new_list->data = new_data;

/* link the old list to the new node /
new_list->next = (*head_ref);

/ move the head to point to the new node /
(*head_ref) = new_list;
}

// function to recursively find the sum of
// nodes of the given linked list
void sumOfNodes(struct list head, int* sum)
{
// if head = NULL
if (!head)
return;

// recursively traverse the remaining nodes
sumOfNodes(head->next, sum);

// accumulate sum
sum = *sum + head->data;
}

// utility function to find the sum of nodes
int sumOfNodesUtil(struct list head)
{

int sum = 0;

// find the sum of nodes
sumOfNodes(head, &sum);

// required sum
return sum;
}

// Driver program to test above
int main()
{
struct list* head = NULL;

// create linked list 7->6->8->4->1
push(&head, 7);
push(&head, 6);
push(&head, 8);
push(&head, 4);
push(&head, 1);

cout << "Sum of nodes = "
<< sumOfNodesUtil(head);
return 0;
}
